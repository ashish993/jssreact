{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nexports.Link = function (_a) {\n  var field = _a.field,\n      editable = _a.editable,\n      children = _a.children,\n      showLinkTextWithChildrenPresent = _a.showLinkTextWithChildrenPresent,\n      otherProps = __rest(_a, [\"field\", \"editable\", \"children\", \"showLinkTextWithChildrenPresent\"]);\n\n  var dynamicField = field;\n\n  if (!field || !dynamicField.editableFirstPart && !dynamicField.value && !dynamicField.href) {\n    return null;\n  }\n\n  var resultTags = []; // EXPERIENCE EDITOR RENDERING\n\n  if (editable && dynamicField.editableFirstPart) {\n    var markup = dynamicField.editableFirstPart + dynamicField.editableLastPart; // in an ideal world, we'd pre-render React children here and inject them between editableFirstPart and editableLastPart.\n    // However, we cannot combine arbitrary unparsed HTML (innerHTML) based components with actual vDOM components (the children)\n    // because the innerHTML is not parsed - it'd make a discontinuous vDOM. So, we'll go for the next best compromise of rendering the link field and children separately\n    // as siblings. Should be \"good enough\" for most cases - and write your own helper if it isn't. Or bring xEditor out of 2006.\n\n    var htmlProps = __assign(__assign({\n      className: 'sc-link-wrapper',\n      dangerouslySetInnerHTML: {\n        __html: markup\n      }\n    }, otherProps), {\n      key: 'editable'\n    });\n\n    resultTags.push(react_1.default.createElement(\"span\", __assign({}, htmlProps))); // don't render normal link tag when editing, if no children exist\n    // this preserves normal-ish behavior if not using a link body (no hacks required)\n\n    if (!children) {\n      return resultTags[0];\n    }\n  } // handle link directly on field for forgetful devs\n\n\n  var link = dynamicField.href ? field : dynamicField.value;\n\n  if (!link) {\n    return null;\n  }\n\n  var anchorAttrs = {\n    href: link.href,\n    className: link.class,\n    title: link.title,\n    target: link.target\n  };\n\n  if (anchorAttrs.target === '_blank' && !anchorAttrs.rel) {\n    // information disclosure attack prevention keeps target blank site from getting ref to window.opener\n    anchorAttrs.rel = 'noopener noreferrer';\n  }\n\n  var linkText = showLinkTextWithChildrenPresent || !children ? link.text || link.href : null;\n  resultTags.push(react_1.default.createElement('a', __assign(__assign(__assign({}, anchorAttrs), otherProps), {\n    key: 'link'\n  }), linkText, children));\n  return react_1.default.createElement(react_1.default.Fragment, null, resultTags);\n};\n\nexports.LinkPropTypes = {\n  field: prop_types_1.default.oneOfType([prop_types_1.default.shape({\n    href: prop_types_1.default.string\n  }), prop_types_1.default.shape({\n    value: prop_types_1.default.object,\n    editableFirstPart: prop_types_1.default.string,\n    editableLastPart: prop_types_1.default.string\n  })]).isRequired,\n  editable: prop_types_1.default.bool,\n  children: prop_types_1.default.node,\n  showLinkTextWithChildrenPresent: prop_types_1.default.bool\n};\nexports.Link.propTypes = exports.LinkPropTypes;\nexports.Link.defaultProps = {\n  editable: true\n};\nexports.Link.displayName = 'Link';","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/node_modules/@sitecore-jss/sitecore-jss-react/dist/components/Link.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__importDefault","mod","__esModule","defineProperty","exports","value","react_1","require","prop_types_1","Link","_a","field","editable","children","showLinkTextWithChildrenPresent","otherProps","dynamicField","editableFirstPart","href","resultTags","markup","editableLastPart","htmlProps","className","dangerouslySetInnerHTML","__html","key","push","default","createElement","link","anchorAttrs","class","title","target","rel","linkText","text","Fragment","LinkPropTypes","oneOfType","shape","string","object","isRequired","bool","node","propTypes","defaultProps","displayName"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\nexports.Link = function (_a) {\n    var field = _a.field, editable = _a.editable, children = _a.children, showLinkTextWithChildrenPresent = _a.showLinkTextWithChildrenPresent, otherProps = __rest(_a, [\"field\", \"editable\", \"children\", \"showLinkTextWithChildrenPresent\"]);\n    var dynamicField = field;\n    if (!field ||\n        (!dynamicField.editableFirstPart &&\n            !dynamicField.value &&\n            !dynamicField.href)) {\n        return null;\n    }\n    var resultTags = [];\n    // EXPERIENCE EDITOR RENDERING\n    if (editable && dynamicField.editableFirstPart) {\n        var markup = dynamicField.editableFirstPart + dynamicField.editableLastPart;\n        // in an ideal world, we'd pre-render React children here and inject them between editableFirstPart and editableLastPart.\n        // However, we cannot combine arbitrary unparsed HTML (innerHTML) based components with actual vDOM components (the children)\n        // because the innerHTML is not parsed - it'd make a discontinuous vDOM. So, we'll go for the next best compromise of rendering the link field and children separately\n        // as siblings. Should be \"good enough\" for most cases - and write your own helper if it isn't. Or bring xEditor out of 2006.\n        var htmlProps = __assign(__assign({ className: 'sc-link-wrapper', dangerouslySetInnerHTML: {\n                __html: markup,\n            } }, otherProps), { key: 'editable' });\n        resultTags.push(react_1.default.createElement(\"span\", __assign({}, htmlProps)));\n        // don't render normal link tag when editing, if no children exist\n        // this preserves normal-ish behavior if not using a link body (no hacks required)\n        if (!children) {\n            return resultTags[0];\n        }\n    }\n    // handle link directly on field for forgetful devs\n    var link = dynamicField.href\n        ? field\n        : dynamicField.value;\n    if (!link) {\n        return null;\n    }\n    var anchorAttrs = {\n        href: link.href,\n        className: link.class,\n        title: link.title,\n        target: link.target,\n    };\n    if (anchorAttrs.target === '_blank' && !anchorAttrs.rel) {\n        // information disclosure attack prevention keeps target blank site from getting ref to window.opener\n        anchorAttrs.rel = 'noopener noreferrer';\n    }\n    var linkText = showLinkTextWithChildrenPresent || !children ? link.text || link.href : null;\n    resultTags.push(react_1.default.createElement('a', __assign(__assign(__assign({}, anchorAttrs), otherProps), { key: 'link' }), linkText, children));\n    return react_1.default.createElement(react_1.default.Fragment, null, resultTags);\n};\nexports.LinkPropTypes = {\n    field: prop_types_1.default.oneOfType([\n        prop_types_1.default.shape({\n            href: prop_types_1.default.string,\n        }),\n        prop_types_1.default.shape({\n            value: prop_types_1.default.object,\n            editableFirstPart: prop_types_1.default.string,\n            editableLastPart: prop_types_1.default.string,\n        }),\n    ]).isRequired,\n    editable: prop_types_1.default.bool,\n    children: prop_types_1.default.node,\n    showLinkTextWithChildrenPresent: prop_types_1.default.bool,\n};\nexports.Link.propTypes = exports.LinkPropTypes;\nexports.Link.defaultProps = {\n    editable: true,\n};\nexports.Link.displayName = 'Link';\n"]},"metadata":{},"sourceType":"script"}