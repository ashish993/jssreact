{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar SitecoreContext_1 = require(\"../components/SitecoreContext\");\n/**\n * @param {WithSitecoreContextOptions} [options]\n */\n\n\nfunction withSitecoreContext(options) {\n  return function withSitecoreContextHoc(Component) {\n    return function WithSitecoreContext(props) {\n      return react_1.default.createElement(SitecoreContext_1.SitecoreContextReactContext.Consumer, null, function (context) {\n        return react_1.default.createElement(Component, __assign({}, props, {\n          sitecoreContext: context.context,\n          updateSitecoreContext: options && options.updatable && context.setContext\n        }));\n      });\n    };\n  };\n}\n\nexports.withSitecoreContext = withSitecoreContext;\n/**\n * This hook grants acсess to the current SiteCore page context\n * by default JSS includes the following properties in this context:\n * - pageEditing - Provided by Layout Service, a boolean indicating whether the route is being accessed via the Experience Editor.\n * - pageState - Like pageEditing, but a string: normal, preview or edit.\n * - site - Provided by Layout Service, an object containing the name of the current Sitecore site context.\n *\n * @see https://jss.sitecore.com/docs/techniques/extending-layout-service/layoutservice-extending-context\n *\n * @param {WithSitecoreContextOptions} [options] hook options\n *\n * @example\n * const EditMode = () => {\n *    const { sitecoreContext } = useSitecoreContext();\n *    return <span>Edit Mode is {sitecoreContext.pageEditing ? 'active' : 'inactive'}</span>\n * }\n *\n * @example\n * const EditMode = () => {\n *    const { sitecoreContext, updateSitecoreContext } = useSitecoreContext({ updatable: true });\n *    const onClick = () => updateSitecoreContext({ pageEditing: true });\n *    return <span onClick={onClick}>Edit Mode is {sitecoreContext.pageEditing ? 'active' : 'inactive'}</span>\n * }\n * @returns {Object} { sitecoreContext, updateSitecoreContext }\n */\n\nfunction useSitecoreContext(options) {\n  var _a;\n\n  var reactContext = react_1.default.useContext(SitecoreContext_1.SitecoreContextReactContext);\n  var updatable = (_a = options) === null || _a === void 0 ? void 0 : _a.updatable;\n  return {\n    sitecoreContext: reactContext.context,\n    updateSitecoreContext: updatable ? reactContext.setContext : undefined\n  };\n}\n\nexports.useSitecoreContext = useSitecoreContext;","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/node_modules/@sitecore-jss/sitecore-jss-react/dist/enhancers/withSitecoreContext.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","react_1","require","SitecoreContext_1","withSitecoreContext","options","withSitecoreContextHoc","Component","WithSitecoreContext","props","default","createElement","SitecoreContextReactContext","Consumer","context","sitecoreContext","updateSitecoreContext","updatable","setContext","useSitecoreContext","_a","reactContext","useContext","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar SitecoreContext_1 = require(\"../components/SitecoreContext\");\n/**\n * @param {WithSitecoreContextOptions} [options]\n */\nfunction withSitecoreContext(options) {\n    return function withSitecoreContextHoc(Component) {\n        return function WithSitecoreContext(props) {\n            return (react_1.default.createElement(SitecoreContext_1.SitecoreContextReactContext.Consumer, null, function (context) { return (react_1.default.createElement(Component, __assign({}, props, { sitecoreContext: context.context, updateSitecoreContext: options && options.updatable && context.setContext }))); }));\n        };\n    };\n}\nexports.withSitecoreContext = withSitecoreContext;\n/**\n * This hook grants acсess to the current SiteCore page context\n * by default JSS includes the following properties in this context:\n * - pageEditing - Provided by Layout Service, a boolean indicating whether the route is being accessed via the Experience Editor.\n * - pageState - Like pageEditing, but a string: normal, preview or edit.\n * - site - Provided by Layout Service, an object containing the name of the current Sitecore site context.\n *\n * @see https://jss.sitecore.com/docs/techniques/extending-layout-service/layoutservice-extending-context\n *\n * @param {WithSitecoreContextOptions} [options] hook options\n *\n * @example\n * const EditMode = () => {\n *    const { sitecoreContext } = useSitecoreContext();\n *    return <span>Edit Mode is {sitecoreContext.pageEditing ? 'active' : 'inactive'}</span>\n * }\n *\n * @example\n * const EditMode = () => {\n *    const { sitecoreContext, updateSitecoreContext } = useSitecoreContext({ updatable: true });\n *    const onClick = () => updateSitecoreContext({ pageEditing: true });\n *    return <span onClick={onClick}>Edit Mode is {sitecoreContext.pageEditing ? 'active' : 'inactive'}</span>\n * }\n * @returns {Object} { sitecoreContext, updateSitecoreContext }\n */\nfunction useSitecoreContext(options) {\n    var _a;\n    var reactContext = react_1.default.useContext(SitecoreContext_1.SitecoreContextReactContext);\n    var updatable = (_a = options) === null || _a === void 0 ? void 0 : _a.updatable;\n    return {\n        sitecoreContext: reactContext.context,\n        updateSitecoreContext: updatable ? reactContext.setContext : undefined,\n    };\n}\nexports.useSitecoreContext = useSitecoreContext;\n"]},"metadata":{},"sourceType":"script"}