{"ast":null,"code":"import _objectSpread from \"C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asha\\\\Documents\\\\ASHA\\\\sitecorejss\\\\test\\\\my-react-jss-app\\\\src\\\\components\\\\Styleguide-Multilingual\\\\index.js\";\nimport React from 'react';\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport StyleguideSpecimen from '../Styleguide-Specimen';\n/**\r\n * Demonstrates using the dictionary functionality and defining route data in\r\n * multiple languages.\r\n */\n\nvar StyleguideMultilingual = props => /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n  e2eId: \"styleguide-multilingual\",\n  children: [/*#__PURE__*/_jsxDEV(Text, {\n    field: props.fields.sample,\n    encode: false,\n    tag: \"p\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"This is a static dictionary entry from \", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"/data/dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 46\n    }, this), \":\\xA0\", props.t('styleguide-sample')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/en/styleguide\",\n      children: \"Show in English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/da-DK/styleguide\",\n      children: \"Show in Danish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"The current language is: \", props.i18n.language]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}), void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this); // the withTranslation() _higher order component_ wraps the\n// component in another component and injects the `i18n`\n// and `t` props into it so that we can use them for translation.\n// Any component that wants to use translation will need to use this,\n// or the react-i18next render props API. See the react-i18next docs for more details.\n\n\n_c = StyleguideMultilingual;\nexport default withTranslation()(StyleguideMultilingual);\n\nvar _c;\n\n$RefreshReg$(_c, \"StyleguideMultilingual\");","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/src/components/Styleguide-Multilingual/index.js"],"names":["React","Text","withTranslation","Link","StyleguideSpecimen","StyleguideMultilingual","props","fields","sample","t","i18n","language"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA;AACA;AACA;AACA;;AACA,IAAMC,sBAAsB,GAAIC,KAAD,iBAC7B,QAAC,kBAAD,kCAAwBA,KAAxB;AAA+B,EAAA,KAAK,EAAC,yBAArC;AAAA,0BACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,MAA1B;AAAkC,IAAA,MAAM,EAAE,KAA1C;AAAiD,IAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,UADF,eAGE;AAAA,uEACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADzC,WAEGF,KAAK,CAACG,CAAN,CAAQ,mBAAR,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAQE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,eAcE;AAAA,4CAA6BH,KAAK,CAACI,IAAN,CAAWC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CAmBA;AACA;AACA;AACA;AACA;;;KAvBMN,sB;AAwBN,eAAeH,eAAe,GAAGG,sBAAH,CAA9B","sourcesContent":["import React from 'react';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport StyleguideSpecimen from '../Styleguide-Specimen';\r\n\r\n/**\r\n * Demonstrates using the dictionary functionality and defining route data in\r\n * multiple languages.\r\n */\r\nconst StyleguideMultilingual = (props) => (\r\n  <StyleguideSpecimen {...props} e2eId=\"styleguide-multilingual\">\r\n    <Text field={props.fields.sample} encode={false} tag=\"p\" />\r\n\r\n    <p>\r\n      This is a static dictionary entry from <code>/data/dictionary</code>:&nbsp;\r\n      {props.t('styleguide-sample')}\r\n    </p>\r\n\r\n    <p>\r\n      <Link to=\"/en/styleguide\">Show in English</Link>\r\n      <br />\r\n      <Link to=\"/da-DK/styleguide\">Show in Danish</Link>\r\n    </p>\r\n\r\n    <p>The current language is: {props.i18n.language}</p>\r\n  </StyleguideSpecimen>\r\n);\r\n\r\n// the withTranslation() _higher order component_ wraps the\r\n// component in another component and injects the `i18n`\r\n// and `t` props into it so that we can use them for translation.\r\n// Any component that wants to use translation will need to use this,\r\n// or the react-i18next render props API. See the react-i18next docs for more details.\r\nexport default withTranslation()(StyleguideMultilingual);\r\n"]},"metadata":{},"sourceType":"module"}