{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asha\\\\Documents\\\\ASHA\\\\sitecorejss\\\\test\\\\my-react-jss-app\\\\src\\\\components\\\\GraphQL-Layout\\\\index.js\";\nimport React from 'react';\nimport { Placeholder, withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\n\nvar GraphQLLayout = ({\n  sitecoreContext,\n  rendering\n}) => {\n  var disconnectedMode = sitecoreContext.route && sitecoreContext.route.layoutId === 'available-in-connected-mode';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-e2e-id\": \"graphql-layout\",\n    children: [disconnectedMode && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This app is running in disconnected mode. GraphQL requires connected mode, headless connected mode, or integrated mode to work.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Libraries such as \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"graphql-tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 31\n        }, this), \" can provide GraphQL API mocking capabilities, which could enable disconnected GraphQL. This is not supported out of the box, however.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To view the GraphQL samples, restart the app using \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"jss start:connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 64\n        }, this), \"\\xA0 or deploy the app to Sitecore to run in integrated mode per the JSS documentation.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), !disconnectedMode && /*#__PURE__*/_jsxDEV(Placeholder, {\n      name: \"jss-graphql-layout\",\n      rendering: rendering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GraphQLLayout;\nexport default withSitecoreContext()(GraphQLLayout);\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphQLLayout\");","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/src/components/GraphQL-Layout/index.js"],"names":["React","Placeholder","withSitecoreContext","GraphQLLayout","sitecoreContext","rendering","disconnectedMode","route","layoutId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,kCAAjD;;AAEA,IAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AACxD,MAAMC,gBAAgB,GACpBF,eAAe,CAACG,KAAhB,IAAyBH,eAAe,CAACG,KAAhB,CAAsBC,QAAtB,KAAmC,6BAD9D;AAGA,sBACE;AAAK,mBAAY,gBAAjB;AAAA,eACGF,gBAAgB,iBACf,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,sDACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAA,uFACqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrD;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAmBG,CAACA,gBAAD,iBAAqB,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,oBAAlB;AAAuC,MAAA,SAAS,EAAED;AAAlD;AAAA;AAAA;AAAA;AAAA,YAnBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA3BD;;KAAMF,a;AA6BN,eAAeD,mBAAmB,GAAGC,aAAH,CAAlC","sourcesContent":["import React from 'react';\r\nimport { Placeholder, withSitecoreContext } from '@sitecore-jss/sitecore-jss-react';\r\n\r\nconst GraphQLLayout = ({ sitecoreContext, rendering }) => {\r\n  const disconnectedMode =\r\n    sitecoreContext.route && sitecoreContext.route.layoutId === 'available-in-connected-mode';\r\n\r\n  return (\r\n    <div data-e2e-id=\"graphql-layout\">\r\n      {disconnectedMode && (\r\n        <React.Fragment>\r\n          <p>\r\n            This app is running in disconnected mode. GraphQL requires connected mode, headless\r\n            connected mode, or integrated mode to work.\r\n          </p>\r\n          <p>\r\n            Libraries such as <code>graphql-tools</code> can provide GraphQL API mocking\r\n            capabilities, which could enable disconnected GraphQL. This is not supported out of the\r\n            box, however.\r\n          </p>\r\n          <p>\r\n            To view the GraphQL samples, restart the app using <code>jss start:connected</code>\r\n            &nbsp; or deploy the app to Sitecore to run in integrated mode per the JSS\r\n            documentation.\r\n          </p>\r\n        </React.Fragment>\r\n      )}\r\n      {!disconnectedMode && <Placeholder name=\"jss-graphql-layout\" rendering={rendering} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withSitecoreContext()(GraphQLLayout);\r\n"]},"metadata":{},"sourceType":"module"}