{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asha\\\\Documents\\\\ASHA\\\\sitecorejss\\\\test\\\\my-react-jss-app\\\\src\\\\NotFound.js\";\nimport React from 'react'; // Renders a route-not-found message when no route is available from Sitecore\n// The JSS equivalent of a 404 Not Found page.\n// This is invoked from RouteHandler when Sitecore returns no valid route data.\n// The NotFound component receives the Layout Service Context data, but no route data.\n// This can be used to power parts of your site, such as navigation, from LS context additions\n// without losing the ability to render them on your 404 pages :)\n\nvar NotFound = ({\n  context = {\n    site: {\n      name: ''\n    },\n    language: ''\n  }\n}) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Page not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"This page does not exist.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Site: \", context.site && context.site.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"Language: \", context.language]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = NotFound;\nexport default NotFound;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotFound\");","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/src/NotFound.js"],"names":["React","NotFound","context","site","name","language"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAR;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC;AAAZ,CAAD,kBACf,QAAC,KAAD,CAAO,QAAP;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,yBACSH,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaC,IADtC,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,gBAGaF,OAAO,CAACG,QAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\n\r\n// Renders a route-not-found message when no route is available from Sitecore\r\n// The JSS equivalent of a 404 Not Found page.\r\n\r\n// This is invoked from RouteHandler when Sitecore returns no valid route data.\r\n// The NotFound component receives the Layout Service Context data, but no route data.\r\n// This can be used to power parts of your site, such as navigation, from LS context additions\r\n// without losing the ability to render them on your 404 pages :)\r\n\r\nconst NotFound = ({ context = { site: { name: '' }, language: '' } }) => (\r\n  <React.Fragment>\r\n    <h1>Page not found</h1>\r\n    <p>This page does not exist.</p>\r\n    <p>\r\n      Site: {context.site && context.site.name}\r\n      <br />\r\n      Language: {context.language}\r\n    </p>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default NotFound;\r\n"]},"metadata":{},"sourceType":"module"}