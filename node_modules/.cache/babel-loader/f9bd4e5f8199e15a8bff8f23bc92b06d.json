{"ast":null,"code":"import _objectSpread from \"C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asha\\\\Documents\\\\ASHA\\\\sitecorejss\\\\test\\\\my-react-jss-app\\\\src\\\\components\\\\Styleguide-FieldUsage-ContentList\\\\index.js\";\nimport React from 'react';\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\nimport StyleguideSpecimen from '../Styleguide-Specimen';\n/**\r\n * Demonstrates usage of a Content List field type within JSS.\r\n * Content Lists are references to 0..n other content items.\r\n * In Sitecore terms, this maps by default to a Treelist field.\r\n */\n\nvar StyleguideFieldUsageContentList = props => {\n  var _props$fields = props.fields,\n      sharedContentList = _props$fields.sharedContentList,\n      localContentList = _props$fields.localContentList;\n  return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n    e2eId: \"styleguide-fieldusage-content-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Shared Content List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), sharedContentList && sharedContentList.map((listItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Field: \", /*#__PURE__*/_jsxDEV(Text, {\n          field: listItem.fields.textField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, \"sharedListItem-\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Local Content List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), localContentList && localContentList.map((listItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Field: \", /*#__PURE__*/_jsxDEV(Text, {\n          field: listItem.fields.textField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, \"localListItem-\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StyleguideFieldUsageContentList;\nexport default StyleguideFieldUsageContentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyleguideFieldUsageContentList\");","map":{"version":3,"sources":["C:/Users/asha/Documents/ASHA/sitecorejss/test/my-react-jss-app/src/components/Styleguide-FieldUsage-ContentList/index.js"],"names":["React","Text","StyleguideSpecimen","StyleguideFieldUsageContentList","props","fields","sharedContentList","localContentList","map","listItem","index","textField"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,+BAA+B,GAAIC,KAAD,IAAW;AAAA,sBACDA,KAAK,CAACC,MADL;AAAA,MACzCC,iBADyC,iBACzCA,iBADyC;AAAA,MACtBC,gBADsB,iBACtBA,gBADsB;AAGjD,sBACE,QAAC,kBAAD,kCAAwBH,KAAxB;AAA+B,IAAA,KAAK,EAAC,oCAArC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGE,iBAAiB,IAChBA,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,kBACpB;AAAA,6BAEE;AAAA,2CACS,QAAC,IAAD;AAAM,UAAA,KAAK,EAAED,QAAQ,CAACJ,MAAT,CAAgBM;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,gCAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA,YADF,CARJ,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,EAkBGH,gBAAgB,IACfA,gBAAgB,CAACC,GAAjB,CAAqB,CAACC,QAAD,EAAWC,KAAX,kBACnB;AAAA,6BAEE;AAAA,2CACS,QAAC,IAAD;AAAM,UAAA,KAAK,EAAED,QAAQ,CAACJ,MAAT,CAAgBM;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,+BAA2BD,KAA3B;AAAA;AAAA;AAAA;AAAA,YADF,CAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAjCD;;KAAMP,+B;AAmCN,eAAeA,+BAAf","sourcesContent":["import React from 'react';\r\nimport { Text } from '@sitecore-jss/sitecore-jss-react';\r\nimport StyleguideSpecimen from '../Styleguide-Specimen';\r\n\r\n/**\r\n * Demonstrates usage of a Content List field type within JSS.\r\n * Content Lists are references to 0..n other content items.\r\n * In Sitecore terms, this maps by default to a Treelist field.\r\n */\r\nconst StyleguideFieldUsageContentList = (props) => {\r\n  const { sharedContentList, localContentList } = props.fields;\r\n\r\n  return (\r\n    <StyleguideSpecimen {...props} e2eId=\"styleguide-fieldusage-content-list\">\r\n      <h5>Shared Content List</h5>\r\n      {/*\r\n      Content list fields are returned with their value as an array of the referenced items.\r\n      So we can use the .map() array function to traverse them. Ensure a `key` attribute is set\r\n      on each element to make React's DOM updating happy:\r\n     */}\r\n      {sharedContentList &&\r\n        sharedContentList.map((listItem, index) => (\r\n          <div key={`sharedListItem-${index}`}>\r\n            {/* The referenced item's fields can be rendered and edited using normal helper components: */}\r\n            <p>\r\n              Field: <Text field={listItem.fields.textField} />\r\n            </p>\r\n          </div>\r\n        ))}\r\n\r\n      <h5>Local Content List</h5>\r\n      {localContentList &&\r\n        localContentList.map((listItem, index) => (\r\n          <div key={`localListItem-${index}`}>\r\n            {/* The referenced item's fields can be rendered and edited using normal helper components: */}\r\n            <p>\r\n              Field: <Text field={listItem.fields.textField} />\r\n            </p>\r\n          </div>\r\n        ))}\r\n    </StyleguideSpecimen>\r\n  );\r\n};\r\n\r\nexport default StyleguideFieldUsageContentList;\r\n"]},"metadata":{},"sourceType":"module"}