"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runPackageManagerCommand = void 0;
var spawn_1 = __importDefault(require("./spawn"));
// runs a package.json script using npm
// uses yarn semantics for args (i.e. pass ['scriptname', '--myarg=value'], no -- needed)
/**
 * @param {string[]} args
 * @param {SpawnSyncOptionsWithStringEncoding} [options]
 */
function runPackageScript(args, options) {
    // npm needs a -- delimiter before any extra args
    var npmArgs = __spreadArrays(['run'], args.slice(0, 1), ['--'], args.slice(1));
    runPackageManagerCommand(npmArgs, options);
}
exports.default = runPackageScript;
// runs a package.json script using yarn or npm
// uses yarn semantics for args (i.e. pass ['scriptname', '--myarg=value'], no -- needed)
/**
 * @param {string[]} npmArgs
 * @param {SpawnSyncOptionsWithStringEncoding} options
 */
function runPackageManagerCommand(npmArgs, options) {
    console.log("> npm " + npmArgs.join(' '));
    spawn_1.default('npm', npmArgs, options);
}
exports.runPackageManagerCommand = runPackageManagerCommand;
