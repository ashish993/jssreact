"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.describe = exports.command = void 0;
/* eslint-disable prettier/prettier */
var sitecore_jss_dev_tools_1 = require("@sitecore-jss/sitecore-jss-dev-tools");
exports.command = 'setup';
exports.describe = 'Sets up the scjssconfig.json config file, which defines how this application connects to a Sitecore instance for content or deployment.';
exports.builder = {
    instancePath: {
        requiresArg: false,
        type: 'string',
        describe: 'Path to the Sitecore "Website" folder (e.g. c:\\dev\\sitecore\\Website)',
    },
    deployUrl: {
        requiresArg: false,
        type: 'string',
        describe: 'Sitecore host used to deploy the app (e.g. http://sitecore9/sitecore/api/jss/import)',
    },
    layoutServiceHost: {
        requiresArg: false,
        type: 'string',
        describe: 'Sitecore host used to download Layout Service data (e.g. http://sitecore9)',
    },
    apiKey: {
        requiresArg: false,
        type: 'string',
        describe: 'Sitecore API Key (GUID of item under /sitecore/system/Settings/Services/API Keys/ in master db, or core db for Sitecore 9.0)',
    },
    deploySecret: {
        requiresArg: false,
        type: 'string',
        describe: 'Deployment secret (32+ random chars)',
    },
    nonInteractive: {
        requiresArg: false,
        type: 'boolean',
        describe: 'Disallows interactive prompts (all other arguments must be passed in this mode)',
    },
    outputFile: {
        requiresArg: false,
        type: 'string',
        describe: 'The file path to output the config to. Defaults to the app\'s scjssconfig.json',
    },
    skipValidation: {
        requiresArg: false,
        type: 'boolean',
        describe: 'Skip validation of command arguments (e.g. for CI)',
    },
};
/**
 * @param {any} argv
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function handler(argv) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            sitecore_jss_dev_tools_1.setup(!argv.nonInteractive, argv.outputFile, argv);
            return [2 /*return*/];
        });
    });
}
exports.handler = handler;
