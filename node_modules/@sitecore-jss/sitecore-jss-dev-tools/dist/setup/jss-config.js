"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceConfigTokens = void 0;
var fs_1 = __importDefault(require("fs"));
var setup_1 = require("./setup");
exports.replaceConfigTokens = function (val) {
    if (!fs_1.default.existsSync(setup_1.userConfigPath)) {
        throw new Error("[JSS Config] Please run setup or create the file \"" + setup_1.userConfigPath + "\"");
    }
    var config = JSON.parse(fs_1.default.readFileSync(setup_1.userConfigPath, { encoding: 'utf8' }));
    if (!val) {
        return val;
    }
    var newVal = val;
    // ensure instance path is defined if used
    // this would result in copying files to random places
    if (newVal.indexOf('{sitecoreInstancePath}') > -1 && !config.sitecore.instancePath) {
        throw new Error("instancePath config variable was used but was undefined or empty. You likely need to run npm run setup or update your " + setup_1.userConfigPath);
    }
    // variable replacement {var} => var from jss config
    Object.keys(config.sitecore).forEach(function (key) {
        var variableValue = "{" + key + "}";
        // special case
        if (key === 'instancePath') {
            variableValue = '{sitecoreInstancePath}';
        }
        newVal = newVal.replace(variableValue, config.sitecore[key]);
    });
    return newVal;
};
