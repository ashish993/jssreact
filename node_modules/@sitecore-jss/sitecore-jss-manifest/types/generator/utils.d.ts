import { ComponentDefinition, ItemDefinition, TemplateDefinition } from './manifest.types';
/**
 * Iterates the keys of the given object and constructs a new object with keys that satisfy the given filter function.
 * @param {Object} obj
 * @param {Function} filter
 * @returns {Object} filtered object
 */
export declare const filterObject: (obj: any, filter: (key: string, value: any) => boolean) => {};
export declare const convertComponentDataToFields: ({ data, context: { item }, }: {
    data: any;
    context: {
        item?: ItemDefinition | undefined;
    };
}) => any[] | undefined;
export interface FieldValue {
    fieldValue: any;
    context: {
        fieldName?: string;
        item: any;
    };
}
/**
 * checks if an array contains duplicate values using a selector function to get the value to check for uniqueness
 * returns array of duplicate keys - or empty array if no dupes
 * @param {any[]} input
 * @param {Function} selector
 */
export declare function checkUnique(input: any[], selector: (element: any) => string): string[];
/**
 * Finds a template definition by name in one or more arrays of template/component definitions
 * @param {string} templateName
 * @param {...Array<Array<TemplateDefinition | ComponentDefinition>>} templates
 * @returns {TemplateDefinition | ComponentDefinition | null} template
 */
export declare function findTemplate(templateName: string, ...templates: Array<Array<TemplateDefinition | ComponentDefinition>>): TemplateDefinition | ComponentDefinition | null;
/**
 * Validates that a set of field values are defined on their template definitions
 * @param {Object} fields
 * @param {TemplateDefinition | ComponentDefinition} template
 * @param {Function} handleError
 * @param {...Array<Array<TemplateDefinition | ComponentDefinition>>} inheritedTemplates
 * @returns {Object} validated fields
 */
export declare function validateFieldDefinitions(fields: {
    [key: string]: any;
}, template: TemplateDefinition | ComponentDefinition, handleError: (fieldName: string) => void, ...inheritedTemplates: Array<Array<TemplateDefinition | ComponentDefinition>>): {};
