"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/no-explicit-any */
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
exports.SitecoreContextReactContext = react_1.default.createContext({});
exports.ComponentFactoryReactContext = react_1.default.createContext({});
var SitecoreContext = /** @class */ (function (_super) {
    __extends(SitecoreContext, _super);
    function SitecoreContext(props) {
        var _this = _super.call(this, props) || this;
        _this.setContext = function (value) {
            _this.setState({
                context: value,
            });
        };
        var context = {
            pageEditing: false,
        };
        if (props.context) {
            context = props.context;
        }
        if (props.context === null) {
            context = null;
        }
        _this.state = {
            context: context,
            setContext: _this.setContext,
        };
        return _this;
    }
    SitecoreContext.prototype.render = function () {
        return (react_1.default.createElement(exports.ComponentFactoryReactContext.Provider, { value: this.props.componentFactory },
            react_1.default.createElement(exports.SitecoreContextReactContext.Provider, { value: this.state }, this.props.children)));
    };
    SitecoreContext.propTypes = {
        children: prop_types_1.default.any.isRequired,
        componentFactory: prop_types_1.default.func,
        context: prop_types_1.default.any,
    };
    SitecoreContext.displayName = 'SitecoreContext';
    return SitecoreContext;
}(react_1.default.Component));
exports.SitecoreContext = SitecoreContext;
