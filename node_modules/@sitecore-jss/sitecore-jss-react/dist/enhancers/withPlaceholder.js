"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var PlaceholderCommon_1 = require("../components/PlaceholderCommon");
var withComponentFactory_1 = require("./withComponentFactory");
/**
 * @param {WithPlaceholderSpec} placeholders
 * @param {WithPlaceholderOptions} [options]
 */
function withPlaceholder(placeholders, options) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function (WrappedComponent) {
        var WithPlaceholder = /** @class */ (function (_super) {
            __extends(WithPlaceholder, _super);
            function WithPlaceholder(props) {
                return _super.call(this, props) || this;
            }
            WithPlaceholder.prototype.render = function () {
                var _this = this;
                var childProps = __assign({}, this.props);
                delete childProps.componentFactory;
                if (options && options.propsTransformer) {
                    childProps = options.propsTransformer(childProps);
                }
                if (this.state.error) {
                    if (childProps.errorComponent) {
                        return react_1.default.createElement(childProps.errorComponent, { error: this.state.error });
                    }
                    return (react_1.default.createElement("div", { className: "sc-jss-placeholder-error" },
                        "A rendering error occurred: ",
                        this.state.error.message,
                        "."));
                }
                var renderingData = options && options.resolvePlaceholderDataFromProps
                    ? options.resolvePlaceholderDataFromProps(childProps)
                    : childProps.rendering;
                var definitelyArrayPlacholders = !Array.isArray(placeholders)
                    ? [placeholders]
                    : placeholders;
                definitelyArrayPlacholders.forEach(function (placeholder) {
                    var placeholderData;
                    if (typeof placeholder !== 'string' && placeholder.placeholder && placeholder.prop) {
                        placeholderData = PlaceholderCommon_1.PlaceholderCommon.getPlaceholderDataFromRenderingData(renderingData, placeholder.placeholder);
                        if (placeholderData) {
                            childProps[placeholder.prop] = _this.getComponentsForRenderingData(placeholderData);
                        }
                    }
                    else {
                        placeholderData = PlaceholderCommon_1.PlaceholderCommon.getPlaceholderDataFromRenderingData(renderingData, placeholder);
                        if (placeholderData) {
                            childProps[placeholder] = _this.getComponentsForRenderingData(placeholderData);
                        }
                    }
                });
                return react_1.default.createElement(WrappedComponent, __assign({}, childProps));
            };
            WithPlaceholder.propTypes = PlaceholderCommon_1.PlaceholderCommon.propTypes;
            return WithPlaceholder;
        }(PlaceholderCommon_1.PlaceholderCommon));
        return withComponentFactory_1.withComponentFactory(WithPlaceholder);
    };
}
exports.withPlaceholder = withPlaceholder;
