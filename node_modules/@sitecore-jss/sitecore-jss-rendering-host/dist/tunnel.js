"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.startRenderHostTunnel = void 0;
const ngrok_1 = __importDefault(require("ngrok"));
/**
 * @param {string} renderHostname
 * @param {INgrokOptions} options
 */
function startRenderHostTunnel(renderHostname, options = { port: 80, proto: 'http', quiet: false }) {
    if (!renderHostname) {
        throw new Error('Unable to start render host tunnel as no hostname for the rendering host was specified.');
    }
    const rewriteHost = `${renderHostname}:${options.port}`;
    const finalOptions = Object.assign(Object.assign({}, options), { host_header: 'rewrite', addr: rewriteHost });
    return ngrok_1.default.connect(finalOptions).then((url) => {
        if (!options.quiet) {
            console.log(`Tunnel started, forwarding '${url}' to '${rewriteHost}'`);
        }
        return url;
    });
}
exports.startRenderHostTunnel = startRenderHostTunnel;
