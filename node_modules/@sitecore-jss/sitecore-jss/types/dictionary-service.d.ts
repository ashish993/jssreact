import { DictionaryPhrases, DictionaryServiceData } from './dataModels';
import { HttpJsonFetcher } from './httpClientInterface';
export interface DictionaryService {
    /**
     * Fetch dictionary data for a language.
     * @param {string} language
     */
    fetchDictionaryData(language: string): Promise<DictionaryPhrases>;
}
export declare type RestDictionaryServiceConfig = {
    /**
     * Your Sitecore instance hostname that is the backend for JSS
     */
    apiHost: string;
    /**
     * The Sitecore SSC API key your app uses
     */
    apiKey: string;
    /**
     * The JSS application name
     */
    siteName: string;
    /**
     * Custom data fetcher
     * @see HttpJsonFetcher<T>
     */
    dataFetcher?: HttpJsonFetcher<DictionaryServiceData>;
    /**
     * Enable/disable caching mechanism
     * @default true
     */
    cacheEnabled?: boolean;
    /**
     * Cache timeout (sec)
     * @default 60
     */
    cacheTimeout?: number;
};
/**
 * Fetch dictionary data using the Sitecore Dictionary Service REST API.
 * Uses Axios as the default data fetcher (@see AxiosDataFetcher).
 */
export declare class RestDictionaryService implements DictionaryService {
    private dictionaryServiceConfig;
    STD_TTL: number;
    constructor(dictionaryServiceConfig: RestDictionaryServiceConfig);
    /**
     * Fetch dictionary data for a language.
     * @param {string} language
     */
    fetchDictionaryData(language: string): Promise<DictionaryPhrases>;
    /**
     * Generate dictionary service url
     * @param {string} language
     */
    private getUrl;
    /**
     * Provides default @see AxiosDataFetcher data fetcher
     * @returns default fetcher
     */
    private getDefaultFetcher;
}
