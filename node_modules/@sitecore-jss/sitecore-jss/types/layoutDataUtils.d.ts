import { ComponentRendering, Field, HtmlElementRendering, Item } from './dataModels';
declare type Fields = {
    [name: string]: Field | Item[];
};
/**
 * Safely extracts a field value from a rendering or fields object.
 * Null will be returned if the field is not defined.
 */
export declare function getFieldValue<T>(renderingOrFields: ComponentRendering | Fields, fieldName: string): T | undefined;
export declare function getFieldValue<T>(renderingOrFields: ComponentRendering | Fields, fieldName: string, defaultValue: T): T;
/**
 * Gets rendering definitions in a given child placeholder under a current rendering.
 * @param {ComponentRendering} rendering
 * @param {string} placeholderName
 * @returns {Array<ComponentRendering | HtmlElementRendering>} child placeholder
 */
export declare function getChildPlaceholder(rendering: ComponentRendering, placeholderName: string): Array<ComponentRendering | HtmlElementRendering>;
export {};
